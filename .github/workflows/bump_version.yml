name: Bump Version

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
    secrets:
      WORKFLOW_GIT_ACCESS_TOKEN:
        required: true
jobs:
  bump_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ inputs.repository }}
          token: ${{ secrets.WORKFLOW_GIT_ACCESS_TOKEN }}
      - name: bump version number
        env:
          ref: ${{ github.ref_name }}
          repository: ${{ inputs.repository }}
        run: |
          
          old_v=$(cat pubspec.yaml | grep -o 'version:[^:]*' | cut -f2 -d":" | xargs)
          echo "old_version=$old_v" >> $GITHUB_ENV
          
          url="https://raw.githubusercontent.com/$repository"
          prod=$(curl "$url/prod/pubspec.yaml" | grep -o 'version:[^:]*' | cut -f2 -d"+")
          homolog=$(curl "$url/homolog/pubspec.yaml" | grep -o 'version:[^:]*' | cut -f2 -d"+")
          dev=$(curl "$url/dev/pubspec.yaml" | grep -o 'version:[^:]*' | cut -f2 -d"+")
          arr=($prod $homolog $dev)
          versionCode=( $( for x in ${arr[@]}; do echo $x; done | sort -n | tail -1) )
          
          perl -i -pe 's/^(version:\s+\d+\.\d+\.\d+\+)(\d+)$/($1).('$versionCode+1')/e' pubspec.yaml
          
          feature=$(git log -1 --oneline | grep "feature/" | xargs)
          fix=$(git log -1 --oneline | grep "fix/" | xargs)
          
          echo "$feature"
          echo "$fix"
          
          if [[ -n "$fix" ]]; then
            perl -i -pe 's/^(version:\s+\d+\.\d+\.)(\d+)(\+\d+)$/($1).($2+1).($3)/e' pubspec.yaml
          elif [[ -n "$feature" ]]; then
            perl -i -pe 's/^(version:\s+\d+\.)(\d+)(\.\d+\+\d+)$/($1).($2+1).($3)/e' pubspec.yaml
          else
            echo "commit is not feature or fix"
          fi
          
          version=$(cat pubspec.yaml | grep -o 'version:[^:]*' | cut -f2 -d":" | xargs)
          echo "new_version=$version" >> $GITHUB_ENV

      - name: GIT commit and push all changed files
        env:
          CI_COMMIT_USER: ${{ github.actor }}
        run: |
          git config --global user.name "${{ env.CI_COMMIT_USER }}"
          git config --global user.email "${{ env.CI_COMMIT_USER }}@users.noreply.github.com"
          git commit -a -m "bump version from ${{ env.old_version }} to ${{ env.new_version}}"
          git push
